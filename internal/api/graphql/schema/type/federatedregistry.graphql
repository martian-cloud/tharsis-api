enum FederatedRegistrySort {
  UPDATED_AT_ASC
  UPDATED_AT_DESC
}

type FederatedRegistryConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [FederatedRegistryEdge]
}

type FederatedRegistryEdge {
  cursor: String!
  node: FederatedRegistry
}

type FederatedRegistryMutationPayload {
  clientMutationId: String
  federatedRegistry: FederatedRegistry
  problems: [Problem!]!
}

type FederatedRegistryToken {
  hostname: String!
  token: String!
}

type CreateFederatedRegistryTokensPayload {
  clientMutationId: String
  tokens: [FederatedRegistryToken!]!
  problems: [Problem!]!
}

type FederatedRegistry implements Node {
  id: ID!
  metadata: ResourceMetadata!
  hostname: String!
  audience: String!
  group: Group!
  createdBy: String!
}

input CreateFederatedRegistryInput {
  clientMutationId: String
  hostname: String!
  audience: String!
  groupPath: String
    @deprecated(
      reason: "Use groupId field instead, which accepts a TRN (Tharsis Resource Name)"
    )
  groupId: String
}

input UpdateFederatedRegistryInput {
  clientMutationId: String
  id: String!
  hostname: String
  audience: String
}

input DeleteFederatedRegistryInput {
  clientMutationId: String
  id: String!
}

input CreateFederatedRegistryTokensInput {
  clientMutationId: String
  jobId: String!
}
