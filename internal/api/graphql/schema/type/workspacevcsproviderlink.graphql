type CreateWorkspaceVCSProviderLinkPayload {
  clientMutationId: String
  vcsProviderLink: WorkspaceVCSProviderLink
  webhookToken: String
  webhookUrl: String
  problems: [Problem!]!
}

type UpdateWorkspaceVCSProviderLinkPayload {
  clientMutationId: String
  vcsProviderLink: WorkspaceVCSProviderLink
  problems: [Problem!]!
}

type DeleteWorkspaceVCSProviderLinkPayload {
  clientMutationId: String
  vcsProviderLink: WorkspaceVCSProviderLink
  problems: [Problem!]!
}

type CreateVCSRunPayload {
  clientMutationId: String
  problems: [Problem!]!
}

type WorkspaceVCSProviderLink implements Node {
  id: ID!
  metadata: ResourceMetadata!
  createdBy: String!
  workspace: Workspace!
  vcsProvider: VCSProvider!
  repositoryPath: String!
  webhookId: String
  moduleDirectory: String
  branch: String!
  tagRegex: String
  globPatterns: [String!]!
  autoSpeculativePlan: Boolean!
  webhookDisabled: Boolean!
}

input CreateWorkspaceVCSProviderLinkInput {
  clientMutationId: String
  moduleDirectory: String
  repositoryPath: String!
  workspacePath: String
    @deprecated(
      reason: "Use workspaceId field instead, which accepts a TRN (Tharsis Resource Name)"
    )
  workspaceId: String
  providerId: String!
  branch: String
  tagRegex: String
  globPatterns: [String!]!
  autoSpeculativePlan: Boolean!
  webhookDisabled: Boolean!
}

input UpdateWorkspaceVCSProviderLinkInput {
  clientMutationId: String
  id: ID!
  moduleDirectory: String
  branch: String
  tagRegex: String
  globPatterns: [String!]!
  autoSpeculativePlan: Boolean
  webhookDisabled: Boolean
  metadata: ResourceMetadataInput
}

input DeleteWorkspaceVCSProviderLinkInput {
  clientMutationId: String
  id: ID!
  force: Boolean
  metadata: ResourceMetadataInput
}

input CreateVCSRunInput {
  clientMutationId: String
  workspacePath: String
    @deprecated(
      reason: "Use workspaceId field instead, which accepts a TRN (Tharsis Resource Name)"
    )
  workspaceId: String
  referenceName: String
  isDestroy: Boolean
}
