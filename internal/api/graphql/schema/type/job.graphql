enum JobSort {
  CREATED_AT_ASC
  CREATED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
}

enum JobStatus {
  queued
  pending
  running
  finished
}

enum JobType {
  plan
  apply
}

type JobConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [JobEdge]
}

type JobEdge {
  cursor: String!
  node: Job
}

type JobTimestamps {
  queuedAt: Time
  pendingAt: Time
  runningAt: Time
  finishedAt: Time
}

type SaveJobLogsPayload {
  clientMutationId: String
  problems: [Problem!]!
}

type ClaimJobPayload {
  clientMutationId: String
  problems: [Problem!]!
  jobId: String
  token: String
}

type Job implements Node {
  id: ID!
  metadata: ResourceMetadata!
  status: JobStatus!
  type: JobType!
  run: Run!
  workspace: Workspace!
  timestamps: JobTimestamps!
  cancelRequested: Boolean!
  logLastUpdatedAt: Time
  maxJobDuration: Int!
  logSize: Int!
  logs(startOffset: Int!, limit: Int!): String!
  runner: Runner
  runnerPath: String
  tags: [String!]!
}

input JobLogStreamSubscriptionInput {
  jobId: String!
  lastSeenLogSize: Int
}

type JobLogStreamEvent {
  completed: Boolean!
  size: Int!
}

type JobCancellationEvent {
  job: Job!
}

input JobCancellationEventSubscriptionInput {
  jobId: String!
}

type JobEvent {
  action: String!
  job: Job!
}

input JobSubscriptionInput {
  runnerId: String
  workspaceId: String
}

input ClaimJobInput {
  clientMutationId: String
  runnerPath: String!
}

input SaveJobLogsInput {
  clientMutationId: String
  logs: String!
  jobId: String!
  startOffset: Int!
}
