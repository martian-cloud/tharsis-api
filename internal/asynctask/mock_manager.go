// Code generated by mockery v2.53.0. DO NOT EDIT.

package asynctask

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockManager is an autogenerated mock type for the Manager type
type MockManager struct {
	mock.Mock
}

// Shutdown provides a mock function with no fields
func (_m *MockManager) Shutdown() {
	_m.Called()
}

// StartTask provides a mock function with given fields: fn
func (_m *MockManager) StartTask(fn func(context.Context)) {
	_m.Called(fn)
}

// NewMockManager creates a new instance of MockManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockManager(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockManager {
	mock := &MockManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
