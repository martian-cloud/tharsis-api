// Code generated by mockery v2.20.0. DO NOT EDIT.

package db

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockSchemaMigrations is an autogenerated mock type for the SchemaMigrations type
type MockSchemaMigrations struct {
	mock.Mock
}

// GetCurrentMigration provides a mock function with given fields: ctx
func (_m *MockSchemaMigrations) GetCurrentMigration(ctx context.Context) (*SchemaMigration, error) {
	ret := _m.Called(ctx)

	var r0 *SchemaMigration
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (*SchemaMigration, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) *SchemaMigration); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*SchemaMigration)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockSchemaMigrations interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockSchemaMigrations creates a new instance of MockSchemaMigrations. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockSchemaMigrations(t mockConstructorTestingTNewMockSchemaMigrations) *MockSchemaMigrations {
	mock := &MockSchemaMigrations{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
