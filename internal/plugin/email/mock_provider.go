// Code generated by mockery v2.20.0. DO NOT EDIT.

package email

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockProvider is an autogenerated mock type for the Provider type
type MockProvider struct {
	mock.Mock
}

// SendMail provides a mock function with given fields: ctx, to, subject, body
func (_m *MockProvider) SendMail(ctx context.Context, to []string, subject string, body string) error {
	ret := _m.Called(ctx, to, subject, body)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []string, string, string) error); ok {
		r0 = rf(ctx, to, subject, body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockProvider creates a new instance of MockProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockProvider(t mockConstructorTestingTNewMockProvider) *MockProvider {
	mock := &MockProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
