// Code generated by mockery v2.53.0. DO NOT EDIT.

package limits

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockLimitChecker is an autogenerated mock type for the LimitChecker type
type MockLimitChecker struct {
	mock.Mock
}

// CheckLimit provides a mock function with given fields: ctx, name, toCheck
func (_m *MockLimitChecker) CheckLimit(ctx context.Context, name ResourceLimitName, toCheck int32) error {
	ret := _m.Called(ctx, name, toCheck)

	if len(ret) == 0 {
		panic("no return value specified for CheckLimit")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, ResourceLimitName, int32) error); ok {
		r0 = rf(ctx, name, toCheck)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockLimitChecker creates a new instance of MockLimitChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLimitChecker(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLimitChecker {
	mock := &MockLimitChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
